apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

generatorOptions:
  disableNameSuffixHash: true

secretGenerator:
  # - name: argo-workflows-credentials
  #   namespace: argo-workflows
  #   literals:
  #     - username=argo-workflows
  #     - password=<path:kv/data/infra/argo-workflows#pg_password>
  # - name: argo-server-sso
  #   namespace: argo-workflows
  #   literals:
  #     - client-id=<path:kv/data/infra/argo-workflows#client_id>
  #     - client-secret=<path:kv/data/infra/argo-workflows#client_secret>
  # - name: argo-s3-credentials
  #   namespace: argo-workflows
  #   literals:
  #     - access_key=<path:kv/data/infra/argo-workflows#access_key>
  #     - secret_key=<path:kv/data/infra/argo-workflows#secret_key>
  - name: argo-admin.service-account-token
    namespace: argo-workflows
  # - name: git-credentials
  #   namespace: argo-workflows
  #   literals:
  #     - username=<path:kv/data/infra/github#username>
  #     - password=<path:kv/data/infra/github#password>
  # - name: docker-config
  #   namespace: argo-workflows
  #   type: kubernetes.io/dockerconfigjson
  #   literals:
  #     - |
  #       .dockerconfigjson=
  #       {
  #           "auths": {
  #               "harbor.remikeat.com": {
  #                   "username": "<path:kv/data/infra/harbor#user | yamlParse | jsonPath {.username}>",
  #                   "password": "<path:kv/data/infra/harbor#user | yamlParse | jsonPath {.password}>",
  #                   "auth": "<path:kv/data/infra/harbor#user | yamlParse | jsonPath {.username}{':'}{.password} | base64encode>"
  #               }
  #           }
  #       }

helmCharts:
  - name: cluster
    namespace: argo-workflows
    releaseName: argo-workflows-db
    valuesFile: values-argo-workflows-db.yaml
    version: 0.0.11
    repo: https://cloudnative-pg.github.io/charts
  - name: argo-workflows
    namespace: argo-workflows
    releaseName: argo-workflows
    valuesFile: values.yaml
    version: 0.42.5
    repo: https://argoproj.github.io/argo-helm

resources:
  - namespace.yaml
  - externalsecret.yaml
  - serviceaccount.yaml
  - clusterrole.yaml
  - clusterrolebinding.yaml
  - build-image.yaml
  - build-static-website.yaml

patches:
  - target:
      kind: Secret
      name: argo-admin.service-account-token
    patch: |-
      - op: add
        path: /type
        value: kubernetes.io/service-account-token
      - op: add
        path: /metadata/annotations
        value: {"kubernetes.io/service-account.name": "argo-admin"}
