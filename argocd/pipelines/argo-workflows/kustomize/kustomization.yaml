apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

generatorOptions:
  disableNameSuffixHash: true

configMapGenerator:
  - name: git-askpass
    namespace: argo-workflows
    files:
      - git-askpass.sh

secretGenerator:
  - name: argo-workflows-credentials
    namespace: argo-workflows
    literals:
      - username=argo-workflows
      - password=<path:kv/data/argo-workflows#pg_password>
  - name: argo-server-sso
    namespace: argo-workflows
    literals:
      - client-id=<path:kv/data/argo-workflows#client_id>
      - client-secret=<path:kv/data/argo-workflows#client_secret>
  - name: argo-s3-credentials
    namespace: argo-workflows
    literals:
      - access_key=<path:kv/data/argo-workflows#access_key>
      - secret_key=<path:kv/data/argo-workflows#secret_key>
  - name: argo-admin.service-account-token
    namespace: argo-workflows
  - name: git-credentials
    namespace: argo-workflows
    literals:
      - username=<path:kv/data/github#username>
      - password=<path:kv/data/github#password>
  - name: docker-config
    namespace: argo-workflows
    type: kubernetes.io/dockerconfigjson
    literals:
      - |
        .dockerconfigjson=
        {
            "auths": {
                "harbor.remikeat.com": {
                    "username": "<path:kv/data/harbor#user | yamlParse | jsonPath {.username}>",
                    "password": "<path:kv/data/harbor#user | yamlParse | jsonPath {.password}>",
                    "auth": "<path:kv/data/harbor#user | yamlParse | jsonPath {.username}{':'}{.password} | base64encode>"
                }
            }
        }

helmCharts:
  - name: cluster
    namespace: argo-workflows
    releaseName: argo-workflows-db
    valuesFile: values-argo-workflows-db.yaml
    version: 0.0.11
    repo: https://cloudnative-pg.github.io/charts
  - name: argo-workflows
    namespace: argo-workflows
    releaseName: argo-workflows
    valuesFile: values.yaml
    version: 0.42.5
    repo: https://argoproj.github.io/argo-helm

resources:
  - serviceaccount.yaml
  - clusterrolebinding.yaml
  - build-image.yaml

patches:
  - target:
      kind: Secret
      name: argo-admin.service-account-token
    patch: |-
      - op: add
        path: /type
        value: kubernetes.io/service-account-token
      - op: add
        path: /metadata/annotations
        value: {"kubernetes.io/service-account.name": "argo-admin"}
