apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argo-workflows-credentials
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: secret-store
    kind: ClusterSecretStore
  target:
    name: argo-workflows-credentials
    creationPolicy: Owner
    template:
      data:
        username: argo-workflows
        password: "{{.pg_password}}"
  dataFrom:
  - extract:
      key: infra/pipelines/argo-workflows
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argo-server-sso
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: secret-store
    kind: ClusterSecretStore
  target:
    name: argo-server-sso
    creationPolicy: Owner
    template:
      data:
        client-id: "{{.client_id}}"
        client-secret: "{{.client_secret}}"
  dataFrom:
  - extract:
      key: infra/pipelines/argo-workflows
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argo-s3-credentials
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: secret-store
    kind: ClusterSecretStore
  target:
    name: argo-s3-credentials
    creationPolicy: Owner
    template:
      data:
        access_key: "{{.access_key}}"
        secret_key: "{{.secret_key}}"
  dataFrom:
  - extract:
      key: infra/pipelines/argo-workflows
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: git-credentials
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: secret-store
    kind: ClusterSecretStore
  target:
    name: git-credentials
    creationPolicy: Owner
    template:
      data:
        username: "{{.username}}"
        password: "{{.password}}"
  dataFrom:
  - extract:
      key: infra/github
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: docker-config
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: secret-store
    kind: ClusterSecretStore
  target:
    name: docker-config
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |
          {
            "auths":{
              "harbor.remikeat.com":{
                "username":"{{index (.user | fromYaml) "username"}}",
                "password":"{{index (.user | fromYaml) "password"}}",
                "auth":"{{ printf "%s:%s" (index (.user | fromYaml) "username") (index (.user | fromYaml) "password") | b64enc }}"
              }
            }
          }
  dataFrom:
  - extract:
      key: infra/storage/harbor
