apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: build-image
  namespace: argo-workflows
spec:
  arguments:
    parameters:
      - name: repo
        value: ""
      - name: branch
        value: ""
      - name: path
        value: ""
      - name: image
        value: ""
      - name: buildArgs
        value: ""
  entrypoint: main
  templates:
    - name: main
      dag:
        tasks:
          - name: clone-build-push
            template: clone-build-push
            arguments:
              parameters:
                - name: repo
                  value: "{{workflow.parameters.repo}}"
                - name: branch
                  value: "{{workflow.parameters.branch}}"
                - name: path
                  value: "{{workflow.parameters.path}}"
                - name: image
                  value: "{{workflow.parameters.image}}"
                - name: buildArgs
                  value: "{{workflow.parameters.buildArgs}}"
    - name: clone-build-push
      inputs:
        parameters:
          - name: path
          - name: image
        artifacts:
          - name: repo-source
            path: /work
            git:
              repo: "{{inputs.parameters.repo}}"
              revision: "{{inputs.parameters.branch}}"
              usernameSecret:
                name: git-credentials
                key: username
              passwordSecret:
                name: git-credentials
                key: password
      volumes:
        - name: docker-config
          secret:
            secretName: docker-config
      container:
        readinessProbe:
          exec:
            command: [sh, -c, "buildctl debug workers"]
        image: moby/buildkit:v0.16.0
        securityContext:
          privileged: true
        volumeMounts:
          - name: docker-config
            mountPath: /.docker/config.json
            subPath: .dockerconfigjson
        workingDir: /work/repo/{{inputs.parameters.path}}
        env:
          - name: DOCKER_CONFIG
            value: /.docker
        command: [sh, -c]
        args:
          - |
            buildctl-daemonless.sh build \
            --frontend dockerfile.v0 \
            --local context=. \
            --local dockerfile=. \
            $(for arg in {{inputs.parameters.buildArgs}}; do echo "--opt build-arg:$arg"; done) \
            --output type=image,name=harbor.remikeat.com/{{inputs.parameters.image}},push=true
