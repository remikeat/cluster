controller:
  persistence:
    postgresql:
      host: argo-workflows-db-cluster-rw.argo-workflows.svc.cluster.local
      port: 5432
      database: argo-workflows
      tableName: argo_workflows
      userNameSecret:
        name: argo-workflows-credentials
        key: username
      passwordSecret:
        name: argo-workflows-credentials
        key: password
      ssl: true
      sslMode: require
  workflowDefaults:
    spec:
      serviceAccountName: argo-workflow
workflow:
  serviceAccount:
    create: true
    annotations:
      workflows.argoproj.io/rbac-rule: "'admins' in groups"
      workflows.argoproj.io/rbac-rule-precedence: "1"
    name: "argo-workflow"
    pullSecrets: []
server:
  authModes:
    - sso
  sso:
    enabled: true
    issuer: https://keycloak.remikeat.com/realms/master
    clientId:
      name: argo-server-sso
      key: client-id
    clientSecret:
      name: argo-server-sso
      key: client-secret
    redirectUrl: https://argo-workflows.tail4d334.ts.net/oauth2/callback
    scopes:
      - groups
    rbac:
      enabled: true
  ingress:
    enabled: true
    ingressClassName: tailscale
    hosts:
      - argo-workflows.tail4d334.ts.net
    tls:
      - secretName: argoworkflows-example-tls
        hosts:
          - argo-workflows.tail4d334.ts.net
artifactRepository:
  archiveLogs: false
  s3:
    accessKeySecret:
      name: argo-s3-credentials
      key: access_key
    secretKeySecret:
      name: argo-s3-credentials
      key: secret_key
    insecure: true
    bucket: argo-artifacts
    endpoint: http://minio.minio.svc.cluster.local
    region: ap-northeast-1
