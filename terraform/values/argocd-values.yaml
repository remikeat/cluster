global:
  domain: "argocd"
  affinity:
    podAntiAffinity: soft
configs:
  cm:
    kustomize.buildOptions: --enable-helm
    resource.exclusion: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - "*"
  params:
    server:
      insecure: true
  cmp:
    create: true
    plugins:
      custom-cmp:
        init:
          command: [bash, -c]
          args:
            - |
              values.py
        generate:
          command: [bash, -c]
          args:
            - |
              template.py
      argocd-vault-plugin:
        allowConcurrency: true
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name '*.yaml' | xargs -I {} grep \"<path\\|avp\\.kubernetes\\.io\" {} | grep ."
        generate:
          command:
            - argocd-vault-plugin
            - generate
            - "."
        lockRepo: false
      argocd-vault-plugin-helm:
        allowConcurrency: true
        discover:
          find:
            command:
              - sh
              - "-c"
              - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
        generate:
          command:
            - sh
            - "-c"
            - |
              helm template $ARGOCD_APP_NAME --include-crds -n $ARGOCD_APP_NAMESPACE ${ARGOCD_ENV_HELM_ARGS} . |
              argocd-vault-plugin generate -
        lockRepo: false
      argocd-vault-plugin-kustomize:
        allowConcurrency: true
        discover:
          find:
            command:
              - find
              - "."
              - -name
              - kustomization.yaml
        generate:
          command:
            - sh
            - "-c"
            - "kustomize build . | argocd-vault-plugin generate -"
        lockRepo: false
server:
  replicas: 2
  ingress:
    enabled: true
    ingressClassName: "tailscale"
    extraTls:
      - hosts:
          - "argocd"
repoServer:
  replicas: 2
  volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}

    - name: bw-secrets
      secret:
        secretName: bw-secrets
        optional: true
    - name: repo
      emptyDir: {}

    - name: git-askpass
      configMap:
        name: git-askpass
        defaultMode: 0555
        items:
          - key: git_askpass.sh
            path: git_askpass.sh
    - name: template
      configMap:
        name: template
        defaultMode: 0555
        items:
          - key: template.py
            path: template.py
    - name: values
      configMap:
        name: values
        defaultMode: 0555
        items:
          - key: values.py
            path: values.py

    - name: custom-tools
      emptyDir: {}
  initContainers:
    - name: download-tools
      image: registry.access.redhat.com/ubi8
      env:
        - name: AVP_VERSION
          value: 1.16.1
      command: [sh, -c]
      args:
        - >-
          curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
          chmod +x argocd-vault-plugin &&
          mv argocd-vault-plugin /custom-tools/
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  extraContainers:
    - name: custom-cmp
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: ghcr.io/remikeat/cluster:latest
      env:
        - name: GIT_ASKPASS
          value: /usr/local/bin/git_askpass.sh
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: github-https
              key: username
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-https
              key: password
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - name: git-askpass
          mountPath: /usr/local/bin/git_askpass.sh
          subPath: git_askpass.sh
        - name: values
          mountPath: /usr/local/bin/values.py
          subPath: values.py
        - name: template
          mountPath: /usr/local/bin/template.py
          subPath: template.py

        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp

        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: custom-cmp.yaml
          name: argocd-cmp-cm

        - mountPath: /bw-secrets
          name: bw-secrets
        - mountPath: /repo
          name: repo
    - name: avp
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:v2.12.0
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: argocd-vault-plugin.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
    - name: avp-helm
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:v2.12.0
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: argocd-vault-plugin-helm.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
    - name: avp-kustomize
      command: [/var/run/argocd/argocd-cmp-server]
      image: quay.io/argoproj/argocd:v2.12.0
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: tmp

        # Register plugins into sidecar
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: argocd-vault-plugin-kustomize.yaml
          name: argocd-cmp-cm

        # Important: Mount tools into $PATH
        - name: custom-tools
          subPath: argocd-vault-plugin
          mountPath: /usr/local/bin/argocd-vault-plugin
  imagePullSecrets:
    - name: github-registry
  envFrom:
    - secretRef:
        name: vault-configuration
